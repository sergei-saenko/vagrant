# -*- mode: ruby -*-
# vi: set ft=ruby :

# Tested on
# Vagrant version: "2.3.4"
# OS version: "MacOS Monterey 12.6"
# VirtualBox version: 7.0.6
# VmWare Fusion (macosx): not tested

PRIVATE_NET="192.168.56."
ANSIBLEPLAY="../ansible/"
#DOMAIN=".local"

servers =[
	
{
	:hostname => "vag-rocky9",
	:box => "rockylinux/9",
  :ip => PRIVATE_NET + "10",
  :ram => 4096,
	:cpunum => 2,
	:playbook => ANSIBLEPLAY + "initial.yml"
  },
{
	:hostname => "vag-rocky8",
	:box => "rockylinux/8",
  #:hostname => "c1" + DOMAIN,
  :ip => PRIVATE_NET + "11",
	:ram => 1024,
	:cpunum => 2,
	:playbook => ANSIBLEPLAY + "initial.yml"
  # :ip_int => "1",
	# :hdd_name => "db2_hdd.vdi",
  # :hdd_size => "10000"
  }, 
{
	:hostname => "vag-centos7",
	:box => "centos/7",
  :ip => PRIVATE_NET + "12",
  :ram => 1024,
	:cpunum => 1,
	:playbook => ANSIBLEPLAY + "initial.yml"
  },	
{
	:hostname => "vag-centos6",
	:box => "generic/centos6",
  :ip => PRIVATE_NET + "13",
  :ram => 1024,
	:cpunum => 1,
	:playbook => ANSIBLEPLAY + "initial.yml"
  },
{
	:hostname => "vag-ubuntu16",
	:box => "ubuntu/xenial64",
  :ip => PRIVATE_NET + "14",
  :ram => 1024,
	:cpunum => 1,
	:playbook => ANSIBLEPLAY + "initial.yml"
  },
{
	:hostname => "vag-rhel8",
	:box => "generic/rhel8",
  :ip => PRIVATE_NET + "15",
  :ram => 1024,
	:cpunum => 1,
	:playbook => ANSIBLEPLAY + "initial.yml"
   }
]


Vagrant.configure("2") do |config|
	config.vm.synced_folder ".", "/vagrant", disabled: true
	config.hostmanager.enabled = true
  	config.hostmanager.manage_host = true
		servers.each do |machine|	
			config.vm.define machine[:hostname] do |node|
					node.vm.box = machine[:box]
					node.vm.usable_port_range = (2200..2250)
					node.vm.hostname = machine[:hostname]
					node.vm.network "private_network", ip: machine[:ip]
					node.vbguest.auto_update = false
					## BEGIN: VAGRANT user block
					node.vm.provision "file", source: "~/.ssh/id_rsa_vagrant", destination: "/home/vagrant/.ssh/id_rsa"
					node.vm.provision "file", source: "~/.ssh/id_rsa_vagrant.pub", destination: "/home/vagrant/id_rsa.pub_imported"
					node.vm.provision "shell", inline: <<-SHELL
						chmod 600 /home/vagrant/.ssh/id_rsa
						echo -e "Host *\n   StrictHostKeyChecking no" > /home/vagrant/.ssh/config
						chmod 600 /home/vagrant/.ssh/config
						chown vagrant:vagrant /home/vagrant/.ssh/config
						cat /home/vagrant/id_rsa.pub_imported >> /home/vagrant/.ssh/authorized_keys
						chmod 600 /home/vagrant/.ssh/authorized_keys
	
						# Root user ssh key configuration
						sudo mkdir -p /root/.ssh
						sudo cp /home/vagrant/.ssh/id_rsa /root/.ssh/id_rsa && sudo chmod 600 /root/.ssh/id_rsa && sudo chown root:root /root/.ssh/id_rsa
						cat /home/vagrant/.ssh/authorized_keys |sudo tee /root/.ssh/authorized_keys > /dev/null
						sudo chmod 700 /root/.ssh && sudo chmod 600 /root/.ssh/authorized_keys
						echo -e "Host *\n   StrictHostKeyChecking no" |sudo tee /root/.ssh/config
						sudo chmod 600 /root/.ssh/config && sudo chown root:root /root/.ssh/config
					  SHELL
					## END: VAGRANT user  block
					node.vm.provider "virtualbox" do |vb|
							vb.name = machine[:hostname]
							vb.cpus = machine[:cpunum]
							vb.customize ["modifyvm", :id, "--memory", machine[:ram]]
					end
					node.vm.provision :ansible do |ansible|
							ansible.playbook =  machine[:playbook] #"provisioning/initial_setup.yml"
							end
					# Adding HDD in case if it was specified in servers block (where VMs parameters defined)
					if (!machine[:hdd_name].nil?)
							unless File.exist?(machine[:hdd_name])
							vb.customize ["createhd", "--filename", machine[:hdd_name], "--size", machine[:hdd_size], "--variant", "Fixed", "--format", "VMDK"]
							end
							#vb.customize ["storageattach", :id, "--storagectl", "SATA", "--port", 1, "--device", 0, "--type", "hdd", "--medium", machine[:hdd_name]]
							vb.customize ["storageattach", :id, "--storagectl", "IDE Controller", "--port", 1, "--device", 0, "--type", "hdd", "--medium", machine[:hdd_name]]
					end
				end
		 	end
end
